{"version":3,"file":"static/js/980.8911f7da.chunk.js","mappings":"iNAuBMA,EAAiB,CACrBC,MAAO,KACPC,WAAY,CACVC,KAAM,SACNC,SAAU,IACVC,OAAQ,GACRC,SAAU,MAIRC,EAAS,SAACC,GACd,OACE,SAACC,EAAA,MAAD,CAAYC,SAAUC,EAAAA,GAAkBC,QAAQ,YAAYC,YAAY,WAAWC,UAAWC,GAAAA,CAC5FP,EAAMQ,YAAc,cACpB,6BAFF,UAIE,gBAAKF,UAAU,yBAAf,UACE,gBAAKA,UAAU,sCAAf,SACGN,EAAMS,qBA4GjB,EArGiB,SAACT,GAChB,OACE,UAACC,EAAA,MAAD,CACEG,QAAQ,YACRC,YAAY,WACZK,SAAU,CAAEC,MAAM,EAAMC,OAAQ,MAChCN,UAAWC,GAAAA,CACTP,EAAMM,WAAaN,EAAMM,UACzBN,EAAMQ,YAAc,cACpBR,EAAMS,eAAiB,oCACP,SAAhBT,EAAMa,OAAoB,0BACV,SAAhBb,EAAMa,OAAoB,mBACV,WAAhBb,EAAMa,OAAsB,qBACZ,WAAhBb,EAAMa,OAAsB,qBAC5B,iEAZJ,UAgBGb,EAAMS,gBACL,SAACV,EAAD,CAAQU,cAAeT,EAAMS,cAAeD,WAAYR,EAAMQ,aAG9DR,EAAMQ,YAqCN,UAAC,WAAD,YAGE,SAACP,EAAA,MAAD,CACEa,WAAYtB,EACZc,UAAWC,GAAAA,CAAWP,EAAMe,gBAAkBf,EAAMe,gBAAkB,4CAA6C,gCAFrH,SAIGf,EAAMgB,SACLhB,EAAMgB,UAEN,SAACf,EAAA,MAAD,CAAYC,SAAUC,EAAAA,GAAkBc,IAAMjB,EAAMkB,IAAMC,IAAMnB,EAAMoB,WAAad,UAAWC,GAAAA,CAAWP,EAAMqB,UAAYrB,EAAMqB,SAAU,6BAK/I,UAACpB,EAAA,MAAD,CACEa,WAAYtB,EACZc,UAAWC,GAAAA,CACTP,EAAMS,eAAiB,0BACvBT,EAAMsB,kBAAoBtB,EAAMsB,iBAChC,gGALJ,WASE,SAACrB,EAAA,KAAD,CAAWC,SAAUC,EAAAA,GAAkBG,UAAWC,GAAAA,CAAWP,EAAMS,eAAiB,oCAAqC,4BAAzH,SAAwJT,EAAMuB,YAE9J,SAACtB,EAAA,IAAD,CAAUC,SAAUC,EAAAA,GAAkBG,UAAU,gBAAhD,SAAkEN,EAAMwB,OAEtExB,EAAMyB,SACN,SAACxB,EAAA,MAAD,CAAYC,SAAUC,EAAAA,GAAkBG,UAAU,iCAAlD,SACIN,EAAMyB,gBAlEhB,UAAC,WAAD,YAGE,UAACxB,EAAA,MAAD,CACEa,WAAYtB,EACZc,UAAWC,GAAAA,CACTP,EAAMS,eAAiB,0BACvBT,EAAMsB,kBAAoBtB,EAAMsB,iBAChC,mFALJ,WAQE,SAACrB,EAAA,KAAD,CAAWC,SAAUC,EAAAA,GAAkBG,UAAWC,GAAAA,CAAWP,EAAMS,eAAiB,oCAAqC,4BAAzH,SAAwJT,EAAMuB,YAE9J,SAACtB,EAAA,IAAD,CAAUC,SAAUC,EAAAA,GAAkBG,UAAU,gBAAhD,SAAkEN,EAAMwB,OAEtExB,EAAMyB,SACN,SAACxB,EAAA,MAAD,CAAYC,SAAUC,EAAAA,GAAkBG,UAAU,yCAAlD,SACIN,EAAMyB,aAOd,SAACxB,EAAA,MAAD,CACEa,WAAYtB,EACZc,UAAWC,GAAAA,CAAWP,EAAMe,gBAAkBf,EAAMe,gBAAkB,6BAA8B,6CAFtG,SAGGf,EAAMgB,SACLhB,EAAMgB,UAEN,SAACf,EAAA,MAAD,CAAYC,SAAUC,EAAAA,GAAkBc,IAAMjB,EAAMkB,IAAMC,IAAI,iCAAiCb,UAAWC,GAAAA,CAAWP,EAAMqB,UAAYrB,EAAMqB,SAAU","sources":["components/WorkCard/WorkCard.tsx"],"sourcesContent":["import React, { ReactFragment } from 'react';\nimport classNames from 'classnames';\nimport { motion } from 'framer-motion';\nimport { scrollEffectAnim } from '../../utilities/animationVariants';\n\nimport './WorkCard.scss';\n\ninterface WorkCardProps {\n  color?: 'blue' | 'rose' | 'yellow' | 'purple',\n  img?: string,\n  headline: ReactFragment | string,\n  body: string | ReactFragment,\n  button?: object;\n  rightAlign?: boolean,\n  altImage?: any,\n  imgAltText?: string,\n  bannerContent? : any,\n  className?: string,\n  imgWrapperClass?: string,\n  imgClass?: string,\n  textWrapperClass?: string,\n}\n\nconst hoverAnimation = {\n  scale: 1.02,\n  transition: {\n    type: \"spring\",\n    duration: 0.05,\n    bounce: 0.2,\n    velocity: 10000,\n  }\n}\n\nconst Banner = (props: { bannerContent: any, rightAlign: boolean | undefined }) => {\n  return (\n    <motion.div variants={scrollEffectAnim} initial=\"offscreen\" whileInView=\"onscreen\" className={classNames(\n      props.rightAlign && 'right-align',\n      \"work-card__banner-wrapper\"\n    )}>\n      <div className=\"work-card__banner py-3\">\n        <div className=\"work-card__banner-content px-4 pb-2\">\n          {props.bannerContent}\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\nconst WorkCard = (props: WorkCardProps) => {\n  return (\n    <motion.div\n      initial=\"offscreen\"\n      whileInView=\"onscreen\"\n      viewport={{ once: true, amount: 0.075 }}\n      className={classNames(\n        props.className && props.className,\n        props.rightAlign && 'right-align',\n        props.bannerContent && 'portfolio__work-card--with-banner',\n        props.color === 'blue' && 'bg-gradient-blue--angle',\n        props.color === 'rose' && 'bg-gradient-rose',\n        props.color === 'yellow' && 'bg-gradient-yellow',\n        props.color === 'purple' && 'bg-gradient-purple',\n        \"portfolio__work-card d-flex flex-wrap align-items-center px-3\"\n      )}\n    >\n      \n      {props.bannerContent && (\n        <Banner bannerContent={props.bannerContent} rightAlign={props.rightAlign}/>\n      )}\n\n      {!props.rightAlign ? (\n        <React.Fragment>\n          \n          {/* TEXT */}\n          <motion.div\n            whileHover={hoverAnimation}\n            className={classNames(\n              props.bannerContent && \"mt-lg-5 pt-lg-5 pt-xl-0\",\n              props.textWrapperClass && props.textWrapperClass,\n              \"work-card__text-wrapper col-12 col-lg-5 order-1 order-lg-0 px-sm-5 mt-5 mt-lg-0\"\n              )}\n          >\n            <motion.h4 variants={scrollEffectAnim} className={classNames(props.bannerContent && \"work-card__headline--shrink-width\", \"work-card__headline mb-4\")}>{ props.headline }</motion.h4>\n\n            <motion.p variants={scrollEffectAnim} className=\"max-w-xs mb-5\">{ props.body }</motion.p>\n            \n            { props.button && (\n              <motion.div variants={scrollEffectAnim} className=\"text-center text-lg-start mb-0 mb-lg-5\">\n                { props.button }\n              </motion.div>\n            )}\n\n          </motion.div>\n\n          {/* IMAGE */}\n          <motion.div \n            whileHover={hoverAnimation}\n            className={classNames(props.imgWrapperClass ? props.imgWrapperClass : \"col-12 col-lg ps-0 ps-lg-4\", \"work-card__img-wrapper order-0 order-lg-1\")}>\n            {props.altImage ? (\n              props.altImage\n            ) : (\n              <motion.img variants={scrollEffectAnim} src={ props.img } alt=\"property search application UI\" className={classNames(props.imgClass && props.imgClass, \"work-card__img w-100\")}/>\n            )}\n          </motion.div>\n\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          \n          {/* IMAGE */}\n          <motion.div\n            whileHover={hoverAnimation}\n            className={classNames(props.imgWrapperClass ? props.imgWrapperClass : \"work-card__img-wrapper order-1 order-lg-0\", \"col-12 col-lg-8 pe-0 pe-lg-4\")}\n          >\n            {props.altImage ? (\n              props.altImage\n            ) : (\n              <motion.img variants={scrollEffectAnim} src={ props.img } alt={ props.imgAltText } className={classNames(props.imgClass && props.imgClass, \"work-card__img w-100\")}/>\n            )}\n          </motion.div>\n\n          {/* TEXT */}\n          <motion.div\n            whileHover={hoverAnimation}\n            className={classNames(\n              props.bannerContent && \"mt-lg-5 pt-lg-5 pt-xl-0\",\n              props.textWrapperClass && props.textWrapperClass,\n              \"work-card__text-wrapper col-12 col-lg-4 order-0 order-lg-1 ps-0 ps-lg-4 px-sm-5 mt-5 mt-lg-0\"\n              )}\n            >\n            \n            <motion.h4 variants={scrollEffectAnim} className={classNames(props.bannerContent && \"work-card__headline--shrink-width\", \"work-card__headline mb-4\")}>{ props.headline }</motion.h4>\n            \n            <motion.p variants={scrollEffectAnim} className=\"max-w-xs mb-5\">{ props.body }</motion.p>\n            \n            { props.button && (\n              <motion.div variants={scrollEffectAnim} className=\"text-center text-lg-start mb-5\">\n                { props.button }\n              </motion.div>\n            )}\n\n          </motion.div>\n\n        </React.Fragment>\n      )}\n    </motion.div>\n  )\n}\n\nexport default WorkCard;"],"names":["hoverAnimation","scale","transition","type","duration","bounce","velocity","Banner","props","motion","variants","scrollEffectAnim","initial","whileInView","className","classNames","rightAlign","bannerContent","viewport","once","amount","color","whileHover","imgWrapperClass","altImage","src","img","alt","imgAltText","imgClass","textWrapperClass","headline","body","button"],"sourceRoot":""}